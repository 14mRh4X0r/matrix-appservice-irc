# Configuration specific to AS registration. Unless other marked, all fields
# are *REQUIRED*.
appService:
  homeserver:
    # The URL to the home server for client-server API calls.
    url: "http://localhost:8008"
    # The 'domain' part for user IDs on this home server. Usually (but not always)
    # is the "domain name" part of the HS URL.
    domain: "localhost"
  appservice:
    # The application service token to use. Please use a secure random token! You
    # can generate a secure random token by typing into the terminal:
    # node -e "require('crypto').randomBytes(20,function(ex,buf){console.log(buf.toString('hex'))});"
    token: "f0c03ebff14c223b57a3afdffe42ffd9c5875e9b"
    # The webhook URL for the home server to hit on new events.
    url: "http://localhost:3500"
  http:
    # The port to listen on.
    port: 3500
  # Optional. The desired user ID localpart for the AS bot.
  localpart: "appservice_irc"

# Configuration specific to the IRC service
ircService:
  servers:
    # The address of the server to connect to.
    irc.example.com:
      # The port to connect to. Optional.
      port: 6697
      # Whether to use SSL or not. Default: false.
      ssl: true

      botConfig:
        # The nickname to give the AS bot.
        nick: "appservicebot"
        # The password to give to NickServ for this nick. Optional.
        password: "helloworld"

      # Configuration for PMs / private 1:1 communications between users.
      privateMessages:
        # Enable the ability for PMs to be sent to/from IRC/Matrix.
        # Default: true.
        enabled: true
        # Prevent Matrix users from sending PMs to the following IRC nicks.
        # Optional. Default: [].
        exclude: ["Alice", "Bob"] # NOT YET IMPLEMENTED

      # Configuration for mappings not explicitly listed in the 'mappings' 
      # section.
      dynamicChannels:
        # Enable the ability for Matrix users to join *any* channel on this IRC
        # network.
        # Default: false.
        enabled: true
        # Should the AS create a room alias for the new Matrix room? The form of
        # the alias can be modified via 'aliasTemplate'. Default: true.
        createAlias: true
        # Should the AS publish the new Matrix room to the public room list so
        # anyone can see it? Default: true.
        published: true
        # What should the join_rule be for the new Matrix room? If 'public',
        # anyone can join the room. If 'invite', only users with an invite can
        # join the room. Note that if an IRC channel has +k or +i set on it,
        # join_rules will be set to 'invite' until these modes are removed.
        # Default: "public".
        joinRule: public
        # Should created Matrix rooms be federated? If false, only users on the
        # HS attached to this AS will be able to interact with this room.
        # Default: true.
        federate: true # NOT YET IMPLEMENTED
        # The room alias template to apply when creating new aliases. This only
        # applies if createAlias is 'true'. The following variables are exposed:
        # $SERVER => The IRC server address (e.g. "irc.example.com")
        # $CHANNEL => The IRC channel (e.g. "#python")
        # This MUST have $CHANNEL somewhere in it.
        # Default: '#irc_$SERVER_$CHANNEL'
        aliasTemplate: "#irc_$CHANNEL"
        # A list of user IDs which the AS bot will send invites to in response
        # to a !join. Only applies if joinRule is 'invite'. Default: []
        whitelist:
          - "@foo:example.com"
          - "@bar:example.com"
        # Prevent the given list of channels from being mapped under any 
        # circumstances.
        exclude: ["#foo", "#bar"]

      mappings:
        # 1:many mappings from IRC channels to room IDs on this IRC server.
        "#thepub": ["!kieouiJuedJoxtVdaG:localhost"]

      # Configuration for virtual matrix users. The following variables are
      # exposed:
      # $NICK => The IRC nick
      # $SERVER => The IRC server address (e.g. "irc.example.com")
      matrixClients:
        # The user ID template to use when creating virtual matrix users. This
        # MUST have $NICK somewhere in it.
        # Optional. Default: "@$SERVER_$NICK".
        # Example: "@irc.example.com_Alice:example.com"
        userTemplate: "@irc_$NICK"
        # The display name to use for created matrix clients. This MUST have
        # $NICK somewhere in it if it is specified.
        # Optional. Default: "$NICK (IRC)". Example: "Alice (IRC)"
        displayName: "$NICK (IRC)" # NOT YET IMPLEMENTED
        # Make virtual matrix clients join and leave rooms as their real IRC
        # counterparts join/part channels.
        # Optional. Default: true
        mirrorJoinPart: true

      # Configuration for virtual IRC users. The following variables are exposed:
      # $LOCALPART => The user ID localpart ("alice" in @alice:localhost)
      # $USERID => The user ID
      # $DISPLAY => The display name of this user, with excluded characters
      #             (e.g. space) removed. If the user has no display name, this
      #             falls back to $LOCALPART.
      ircClients:
        # The template to apply to every IRC client nick. This MUST have either
        # $DISPLAY or $USERID or $LOCALPART somewhere in it.
        # Optional. Default: "M-$DISPLAY". Example: "M-Alice".
        nickTemplate: "M-$DISPLAY"
        # True to allow virtual IRC clients to change their nick on this server
        # by issuing !nick <server> <nick> commands to the IRC AS bot.
        # This is completely freeform: it will NOT follow the nickTemplate.
        allowNickChanges: true
        # The max number of IRC clients that will connect. If the limit is
        # reached, the client that spoke the longest time ago will be
        # disconnected and replaced.
        # Optional. Default: 30.
        maxClients: 30
        # The maximum amount of time in seconds that the client can exist
        # without sending another message before being disconnected. Use 0 to
        # not apply an idle timeout. Default: 172800 (48 hours)
        idleTimeout: 10800
        # Make virtual IRC clients join and leave channels as their real Matrix
        # counterparts join/leave rooms. Make sure your 'maxClients' value is
        # high enough!
        # Optional. Default: false
        mirrorJoinPart: true
  
  # Configuration for an ident server. If you are running a public bridge it is
  # advised you setup an ident server so IRC mods can ban specific matrix users
  # rather than the application service itself.
  # NOT YET IMPLEMENTED.
  ident:
    # True to listen for Ident requests and respond with the
    # matrix user's user_id (converted to ASCII, respecting RFC 1413).
    # Default: false.
    enabled: false
    # The port to listen on for incoming ident requests.
    # Ports below 1024 require root to listen on, and you may not want this to
    # run as root. Instead, you can get something like an Apache to yank up
    # incoming requests to 113 to a high numbered port. Set the port to listen
    # on instead of 113 here.
    # Default: 113.
    port: 1113
    # True to return a hash of the username rather than the user_id itself. This
    # may be preferable if you'd rather not leak the matrix users connected to
    # the IRC network.
    # Default: false.
    hashUsernames: false

  # Configuration for logging. Optional. Default: console debug level logging
  # only.
  logging:
    # Level to log on console/logfile. One of error|warn|info|debug
    level: "debug"
    # The file location to log to. This is relative to the project directory.
    logfile: "debug.log"
    # The file location to log errors to. This is relative to the project
    # directory.
    errfile: "errors.log"
    # Whether to log to the console or not.
    toConsole: true
    # The max size each file can get to in bytes before a new file is created.
    maxFileSizeBytes: 134217728 # 128 MB
    # The max number of files to keep. Files will be overwritten eventually due
    # to rotations.
    maxFiles: 5

  # Optional. The endpoint for a statsd server. If not specified, stats will not
  # be sent. Stats are sent as UDP.
  statsd:
    hostname: "127.0.0.1"
    port: 9878

  # The nedb database URI to connect to. This is the name of the directory to
  # dump .db files to. This is relative to the project directory.
  # Required.
  databaseUri: "nedb://data"
